import type { NextPage } from "next";
import Head from "next/head";
import styles from "../styles/utils.module.css";
import ProfileNews from "../components/home/News";
import ProfileLivestream from "../components/home/Livestream";
import ProfileQuiz from "../components/home/Quiz";
import { useState } from "react";

import ProfileTabs from "../components/home/Tabs";

const Home: NextPage = (AllData: any) => {
  const [selectedTab, setSelectedTab] = useState("news");

  const changeRoute = (val: string) => {
    setSelectedTab(val);
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>IDN Test Case</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="https://www.idntimes.com/favicon.png" />
      </Head>

      <main className={styles.main}>
        <div className="tabs">
          <ProfileTabs
            selectedTab={selectedTab}
            setSelectedTab={(val: string) => changeRoute(val)}
          />
        </div>
        {selectedTab === "news" && (
          <ProfileNews dataNews={AllData.AllData.newsdata.data} />
        )}
        {selectedTab === "livestream" && (
          <ProfileLivestream dataLivestreams={AllData.AllData.livedata.data} />
        )}
        {selectedTab === "quiz" && (
          <ProfileQuiz dataQuizzes={AllData.AllData.quizdata.data} />
        )}
      </main>
    </div>
  );
};

export async function getServerSideProps() {
  if (process.env.NODE_ENV === "development") {
    const newsResponse = await fetch(`${process.env.LOCAL_URL}/api/news`);
    const liveResponse = await fetch(`${process.env.LOCAL_URL}/api/livestream`);
    const quizResponse = await fetch(`${process.env.LOCAL_URL}/api/quiz`);
    const newsdata = await newsResponse.json();
    const livedata = await liveResponse.json();
    const quizdata = await quizResponse.json();
    return {
      props: {
        AllData: { newsdata, livedata, quizdata },
      },
    };
  } else {
    const newsResponse = await fetch(`${process.env.DEPLOYMENT_URL}/api/news`);
    const liveResponse = await fetch(
      `${process.env.DEPLOYMENT_URL}/api/livestream`
    );
    const quizResponse = await fetch(`${process.env.DEPLOYMENT_URL}/api/quiz`);
    const newsdata = await newsResponse.json();
    const livedata = await liveResponse.json();
    const quizdata = await quizResponse.json();
    return {
      props: {
        AllData: { newsdata, livedata, quizdata },
      },
    };
  }
}

export default Home;
